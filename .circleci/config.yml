version: 2.1
parameters:

  release:
    type: boolean
    default: false

  version:
    type: string
    default: "0.0"

  next:
    type: string
    default: "0.0"

  application-name:
    type: string
    default: "batch-dem-reader"

commands:

  run_with_m2_cache:
    parameters:
      steps:
        type: steps
    steps:
      - run:
          name: Generate cache key
          command: |
            find . -name 'pom.xml' | sort | xargs cat > ~/maven_cache_seed
            echo "Generated pom checksum"
      - restore_cache:
          keys:
            # First, try to find a cache for exactly the pom.xml content checksum (e.g. last master build)
            - '<< pipeline.parameters.application-name >>-maven-{{ checksum "~/maven_cache_seed" }}'
            # restore from any cache in the event of a miss. This likely has most of the dependencies already fetched
            - '<< pipeline.parameters.application-name >>-maven-'
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - ~/.m2
          key: '<< pipeline.parameters.application-name >>-maven-{{ checksum "~/maven_cache_seed" }}'

  mvn_build_test:
    steps:
      - run_with_m2_cache:
          steps:
            - run:
                name: Build and test
                command: mvn -B -s build-settings.xml clean install
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

jobs:

  mvn_build:
    resource_class: small
    docker:
      - image: circleci/openjdk:8-stretch
    steps:
      - checkout
      - mvn_build_test

  mvn_release:
    resource_class: small
    docker:
      - image: circleci/openjdk:8-stretch
    steps:
      - checkout
      - mvn_build_test
      - run:
          name: Setup git
          command: |
            git config --global user.email "ci@komoot.de"
            git config --global user.name ${CIRCLE_USERNAME}
      - add_ssh_keys:
          fingerprints:
            - "6f:78:44:30:89:d2:55:58:5d:0d:95:17:a4:b1:8a:d6"
      - run:
          name: Add write key
          command: |
            ssh-add -D
            ssh-add ~/.ssh/id_rsa_6f78443089d255585d0d9517a4b18ad6
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Release version << pipeline.parameters.version >> Next snapshot << pipeline.parameters.next >>
          command: |
            mvn -s build-settings.xml -B release:prepare -DreleaseVersion=<< pipeline.parameters.version >> -DdevelopmentVersion=<< pipeline.parameters.next >>
            mvn -s build-settings.xml release:perform

workflows:
  version: 2

  build:
    unless: << pipeline.parameters.release >>
    jobs:
      - mvn_build:
          context: team-backend
  release:
    when: << pipeline.parameters.release >>
    jobs:
      - mvn_release:
          context: team-backend
